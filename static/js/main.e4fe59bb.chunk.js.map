{"version":3,"sources":["components/SelectPlanTitle.js","components/SelectPlan.js","components/Button1.js","components/OrderSummary.js","components/PaymentForm.js","components/ConfirmPayment.js","components/PaymentConfirmed.js","App.js","reportWebVitals.js","index.js"],"names":["SelectPlanTitle","id","SelectPlan","props","useState","title","price","frequency","change","toggleChange","console","log","className","onClick","selectedPlan","summaryDisplay","document","getElementById","orderTitle","btnPay","style","display","onChoosePlan","Button1","onProceed","OrderSummary","PaymentForm","year","Date","getFullYear","name","action","htmlFor","type","maxLength","value","SubmitEvent","preventDefault","cname","cardinput","scode","isValid","cardnum","security","trim","length","match","onSubmit","validateInput","payment_form","cardname","visa_card","security_code","ConfirmPayment","PaymentConfirmed","App","selectedPlan2","plans","filteredPlans","onUpdatePlan","addSelectPlanHandler","filter","plan","loadingSpinner","visibility","confirmPay","opacity","submitPlan","loadingDisplay","cancelBtn","window","setTimeout","map","proceedPlan","planDisplay","planSummary","formDisplay","proceedBtn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e4fe59bb.chunk.js","sourcesContent":["// Displays Select Plan heading\n\nimport '../App.css';\n\nfunction SelectPlanTitle() {\n    return (\n        <div id=\"title\">\n            <h1>Select Plan:</h1>\n        </div>\n    )\n}\n\nexport default SelectPlanTitle;","// Displays several types of plans to select from, currently with placeholders\nimport React, { useState } from 'react';\nimport { getByTitle } from '@testing-library/dom';\nimport './SelectPlan.css';\n\nfunction SelectPlan(props) {\n    const [title, setTitle] = useState(props.title);\n    const [price, setPrice] = useState(props.price);\n    const [frequency, setFrequency] = useState(props.frequency);\n    const [change, toggleChange] = useState(\"Select\");\n    console.log(\"SelectPlan evaluated by react\");\n    // Event handler upon clicking Select for a plan option; grabs the title, price and\n    // frequency values of the plan to be used later.\n    function clickHandler() {\n        const selectedPlan = {\n            title: props.title,\n            price: props.price,\n            frequency: props.frequency,\n        };\n        var summaryDisplay = document.getElementById(\"summary\");\n        var orderTitle = document.getElementById(\"title\");\n        var btnPay = document.getElementById(\"btnPay\");\n        var changeBtn = document.getElementById(\"change\");\n        var planDisplay = document.getElementById(\"plan\");\n        if (change === \"Select\") {\n            summaryDisplay.style.display = \"block\"\n            orderTitle.style.display = \"none\";\n            btnPay.style.display = \"inline-block\";\n            toggleChange(\"Change\");\n            props.onChoosePlan(selectedPlan.title);\n            // if (props.title === selectedPlan.title) {\n            //     console.log(props.title + \"ok\");\n            //     planDisplay.style.display = \"flex\";\n            // } else {\n            //     console.log(props.title + \"Ok\");\n            //     planDisplay.style.display = \"none\";\n            // }\n\n        } else {\n            summaryDisplay.style.display = \"none\"\n            orderTitle.style.display = \"block\";\n            btnPay.style.display = \"none\";\n            toggleChange(\"Select\");\n            props.onChoosePlan(\"none\");\n        }\n        // return selectedPlan;\n\n        {/*return (\n            <div>\n                {selectedPlan.map(plan => <SelectPlan title={plan.title} price={plan.price} frequency={plan.frequency} />)}\n            </div>\n        )*/}\n        console.log(selectedPlan.title + \" $\" + selectedPlan.price + selectedPlan.frequency);\n    }\n\n    return (\n        <div id=\"planHolder\">\n            <div className=\"plan\" id=\"plan\">\n                {/*<img src=\"%PUBLIC_URL%/icon-music.svg\" alt=\"music>\"> </img>*/}\n                <div className=\"details\">\n                    <h2>{title}</h2>\n                    <p className=\"price\">${props.price}{props.frequency}</p>\n                </div>\n                <a className=\"change\" id=\"change\" onClick={clickHandler}>{change}</a>\n            </div>\n        </div>\n    )\n}\n\nexport default SelectPlan;","// Button for confirming your plan selection\nimport './Button1.css';\n\nfunction Button1(props) {\n    function clickHandler() {\n        props.onProceed(true);\n    }\n    return (\n        <p><button className=\"button1\" id=\"btnPay\" onClick={clickHandler}>Proceed to Payment</button></p>\n    )\n}\n\nexport default Button1;","// Displays order summary header + text \n\nimport '../App.css';\n\nfunction OrderSummary() {\n    return (\n        <div id=\"summary\">\n            <h1>Order Summary</h1>\n\n            <p className=\"text\">You can now listen to millions of songs, audiobooks, and podcasts on any\n                device anywhere you like!</p>\n        </div>\n    )\n}\n\nexport default OrderSummary;","// Displays payment form upon confirming plan choice\n\nimport '../App.css';\nimport './PaymentForm.css';\n\nfunction PaymentForm(props) {\n    // Find year value to automatically update selection for exp date for card\n    const date = new Date();\n    let year = date.getFullYear() - 2000;\n\n    const SubmitHandler = SubmitEvent => {\n        SubmitEvent.preventDefault();\n        validateInput(document.payment_form.cardname, document.payment_form.visa_card, document.payment_form.security_code);\n    }\n    function validateInput(cname, cardinput, scode) {\n        // Starting value true, remains true if it passes validation checks\n        var isValid = true;\n\n        // Checks pattern of input\n        // Length is 13 or 16, starts with 4, and only contains numerical values\n        var cardnum = /^(?:4[0-9]{12}(?:[0-9]{3})?)$/;\n        // Checks security code only contains numbers\n        var security = /^[0-9]*$/;\n\n        // Validate name on card - refuses null input\n        if (cname.value.trim().length === 0) {\n            document.getElementById(\"empty_name\").style.display = \"block\";\n            isValid = false;\n        } else {\n            document.getElementById(\"empty_name\").style.display = \"none\";\n        }\n\n        // Validate security code input - refuses null input, non-numeric\n        // input, and input that doesn't contain 3 characters\n        if (scode.value.trim().length === 0) {\n            document.getElementById(\"empty_scode\").style.display = \"block\";\n            document.getElementById(\"invalid_scode\").style.display = \"none\";\n            isValid = false;\n        } else {\n            document.getElementById(\"empty_scode\").style.display = \"none\";\n            if (scode.value.trim().length === 3 && scode.value.match(security)) {\n                document.getElementById(\"invalid_scode\").style.display = \"none\";\n            } else {\n                document.getElementById(\"invalid_scode\").style.display = \"block\";\n                isValid = false;\n            }\n        }\n\n        // Validate the card number input - checks if it matches the defined\n        // pattern, and if not, checks which kind of mistake has been made\n        // (either an empty input, or something else)\n        if (cardinput.value.match(cardnum)) {\n            document.getElementById(\"invalid_visa\").style.display = \"none\";\n            document.getElementById(\"empty_visa\").style.display = \"none\";\n        } else {\n            if (cardinput.value.trim().length === 0) {\n                document.getElementById(\"empty_visa\").style.display = \"block\";\n                document.getElementById(\"invalid_visa\").style.display = \"none\";\n                isValid = false;\n            } else {\n                document.getElementById(\"invalid_visa\").style.display = \"block\";\n                document.getElementById(\"empty_visa\").style.display = \"none\";\n                isValid = false;\n            }\n        }\n        // Returns true if inputs pass all checks, otherwise returns false\n        props.onSubmit(isValid);\n    }\n\n    return (\n        <div id=\"form__pay\">\n            <form name=\"payment_form\" action=\"\">\n                <h1>Payment</h1>\n                <div>\n                    <label htmlFor=\"cardname\" id=\"cardname\">Name on card</label>\n                    <input type=\"text\" maxLength=\"32\" name=\"cardname\"></input>\n                    <p id=\"empty_name\">Field cannot be left blank.</p>\n                </div><div>\n                    <label htmlFor=\"cardnum\" id=\"cardnum\">Visa Credit Card Number</label>\n                    <input type=\"text\" name=\"visa_card\" maxLength=\"16\"></input>\n                    <p id=\"invalid_visa\">Card number invalid.</p>\n                    <p id=\"empty_visa\">Field cannot be left blank.</p>\n                </div><div>\n                    <label htmlFor=\"expyear\" id=\"expyear\">Expiration Year</label>\n                    <select name=\"expyearselect\" id=\"expyearselect\">\n                        <option value={year}>{year}</option>\n                        <option value={year + 1}>{year + 1}</option>\n                        <option value={year + 2}>{year + 2}</option>\n                        <option value={year + 3}>{year + 3}</option>\n                        <option value={year + 4}>{year + 4}</option>\n                        <option value={year + 5}>{year + 5}</option>\n                    </select>\n                </div><div>\n                    <label htmlFor=\"scode\" id=\"scode\">Security Code</label>\n                    <input type=\"tel\" maxLength=\"3\" id=\"securitycode\" name=\"security_code\"></input>\n                    <p id=\"empty_scode\">Field cannot be left blank.</p>\n                    <p id=\"invalid_scode\">Security code invalid.</p>\n                </div>\n                <button type=\"submit\" id=\"payBtn\" onClick={SubmitHandler}>Submit Details</button>\n            </form>\n        </div>\n    )\n}\n\nexport default PaymentForm;","// Displays message confirming that the purchase was successful after clicking confirm\n\nimport '../App.css';\nimport './ConfirmPayment.css';\n\nfunction ConfirmPayment() {\n    return (\n        <div>\n            <div className=\"loading\" id=\"loading\"></div>\n        </div>\n    )\n}\n\nexport default ConfirmPayment;","// Displays window confirming that the purchase was successful after clicking confirm\n\nimport '../App.css';\nimport './PaymentConfirmed.css';\n\nfunction PaymentConfirmed() {\n    return (\n        <div className=\"container\" id=\"confirmation\">\n            <p>Payment confirmed!</p>\n        </div>\n    )\n}\n\nexport default PaymentConfirmed;","/*import logo from './logo.svg';*/\nimport React, { useState } from 'react';\nimport './App.css';\nimport './index.css';\nimport SelectPlanTitle from './components/SelectPlanTitle';\nimport SelectPlan from './components/SelectPlan';\nimport Button1 from './components/Button1';\nimport OrderSummary from './components/OrderSummary';\nimport PaymentForm from './components/PaymentForm';\nimport ConfirmPayment from './components/ConfirmPayment';\nimport PaymentConfirmed from './components/PaymentConfirmed';\n\nfunction App(props) {\n  const plans = [\n    { id: 1, title: 'Monthly Plan', price: 5.99, frequency: '/month' },\n    { id: 2, title: 'Annual Plan', price: 59.99, frequency: '/year' },\n    { id: 3, title: 'One-Time Payment', price: 159.99, frequency: '' },\n  ];\n\n  // Filter functions to display only the selected plans, or all plans if none selected\n  const [filteredPlans, onUpdatePlan] = useState(plans);\n\n  let selectedPlan2;\n  const addSelectPlanHandler = selectedPlan => {\n    selectedPlan2 = selectedPlan;\n\n    const filteredPlans = plans.filter(plan => {\n      if (selectedPlan2 === plan.title) {\n        return plan.title === selectedPlan2;\n      } else {\n        if (selectedPlan2 === \"none\") {\n          // Runs through each plan and displays them if none selected\n          return plan;\n        }\n      }\n    });\n    // Update the filteredPlans mapping to show changes made\n    onUpdatePlan(filteredPlans);\n  }\n  const proceedPlanHandler = proceedPlan => {\n    var planDisplay = document.getElementById(\"planHolder\");\n    var planSummary = document.getElementById(\"summary\");\n    var formDisplay = document.getElementById(\"form__pay\");\n    var proceedBtn = document.getElementById(\"btnPay\");\n    planDisplay.style.display = \"none\";\n    planSummary.style.display = \"none\";\n    formDisplay.style.display = \"block\";\n    proceedBtn.style.display = \"none\";\n\n  }\n\n  const submitHandler = submitPlan => {\n    // true is returned when PaymentForm.js receives valid visa card input\n    if (submitPlan === true) {\n      var loadingDisplay = document.getElementById(\"loading\");\n      var cancelBtn = document.getElementById(\"cancelButton\");\n      loadingDisplay.style.display = \"block\";\n      cancelBtn.style.display = \"none\";\n      var formDisplay = document.getElementById(\"form__pay\");\n      formDisplay.style.display = \"none\";\n      var confirmPay = document.getElementById(\"confirmation\");\n      confirmPay.style.visibility = \"hidden\";\n      confirmPay.style.opacity = \"0\";\n      window.setTimeout(loadingSpinner, 4500);\n    }\n  }\n\n  // Processing input details for 4.5 seconds\n  function loadingSpinner() {\n    var loadingDisplay = document.getElementById(\"loading\");\n    loadingDisplay.style.visibility = \"hidden\";\n    var confirmPay = document.getElementById(\"confirmation\");\n    confirmPay.style.display = \"block\";\n    confirmPay.style.visibility = \"visible\";\n    confirmPay.style.opacity = \"1\";\n  }\n\n\n  return (\n    <div>\n      <PaymentConfirmed />\n      <ConfirmPayment />\n      <PaymentForm onSubmit={submitHandler} />\n      <SelectPlanTitle />\n      <OrderSummary />\n      {filteredPlans.map(plan => <SelectPlan onChoosePlan={addSelectPlanHandler} key={plan.id} title={plan.title} price={plan.price} frequency={plan.frequency} />)}\n      <Button1 onProceed={proceedPlanHandler} />\n    </div>\n  )\n}\n\nexport default App;\nexport { SelectPlan };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('details')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}