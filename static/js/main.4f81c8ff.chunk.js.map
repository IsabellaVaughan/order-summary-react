{"version":3,"sources":["components/SelectPlanTitle.js","components/SelectPlan.js","components/Button1.js","components/OrderSummary.js","App.js","reportWebVitals.js","index.js"],"names":["SelectPlanTitle","id","SelectPlan","props","useState","title","price","frequency","change","toggleChange","console","log","className","onClick","selectedPlan","summaryDisplay","document","getElementById","orderTitle","btnPay","style","display","onChoosePlan","Button1","OrderSummary","App","selectedPlan2","plans","filteredPlans","onUpdatePlan","addSelectPlanHandler","filter","plan","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gRAYeA,MARf,WACI,OACI,qBAAKC,GAAG,QAAR,SACI,iD,cCuEGC,MAzEf,SAAoBC,GAChB,MAA0BC,mBAASD,EAAME,OAAzC,mBAAOA,EAAP,KACA,GADA,KAC0BD,mBAASD,EAAMG,QAAzC,mBACA,GADA,UACkCF,mBAASD,EAAMI,YAAjD,mBACA,GADA,UAC+BH,mBAAS,WAAxC,mBAAOI,EAAP,KAAeC,EAAf,KAuDA,OArDAC,QAAQC,IAAI,iCAsDR,8BACI,sBAAKC,UAAU,OAAOX,GAAG,OAAzB,UAEI,sBAAKW,UAAU,UAAf,UACI,6BAAKP,IACL,oBAAGO,UAAU,QAAb,cAAuBT,EAAMG,MAAOH,EAAMI,gBAE9C,mBAAGK,UAAU,SAASX,GAAG,SAASY,QA1D9C,WAEI,IAAMC,EAAe,CACjBT,MAAOF,EAAME,MACbC,MAAOH,EAAMG,MACbC,UAAWJ,EAAMI,WAErBG,QAAQC,IAAI,OAASG,EAAaR,OAClC,IAAIS,EAAiBC,SAASC,eAAe,WACzCC,EAAaF,SAASC,eAAe,SACrCE,EAASH,SAASC,eAAe,UACrBD,SAASC,eAAe,UACtBD,SAASC,eAAe,QAC3B,WAAXT,GACAO,EAAeK,MAAMC,QAAU,QAC/BH,EAAWE,MAAMC,QAAU,OAC3BF,EAAOC,MAAMC,QAAU,eAEvBZ,EAAa,UACbN,EAAMmB,aAAaR,EAAaT,SAUhCU,EAAeK,MAAMC,QAAU,OAC/BH,EAAWE,MAAMC,QAAU,QAC3BF,EAAOC,MAAMC,QAAU,OAEvBZ,EAAa,UACbN,EAAMmB,aAAa,SASvBZ,QAAQC,IAAIG,EAAaT,MAAQ,KAAOS,EAAaR,MAAQQ,EAAaP,YAelE,SAA0DC,U,OC/D3De,MANf,WACI,OACI,4BAAG,wBAAQX,UAAU,UAAUX,GAAG,SAA/B,mCCUIuB,MAXf,WACI,OACI,sBAAKvB,GAAG,UAAR,UACI,+CAEA,mBAAGW,UAAU,OAAb,oHC0CGa,MAzCf,SAAatB,GACX,IASIuB,EATEC,EAAQ,CACZ,CAAE1B,GAAI,EAAGI,MAAO,eAAgBC,MAAO,KAAMC,UAAW,UACxD,CAAEN,GAAI,EAAGI,MAAO,cAAeC,MAAO,MAAOC,UAAW,SACxD,CAAEN,GAAI,EAAGI,MAAO,mBAAoBC,MAAO,OAAQC,UAAW,KAIhE,EAAsCH,mBAASuB,GAA/C,mBAAOC,EAAP,KAAsBC,EAAtB,KAGMC,EAAuB,SAAAhB,GAC3BJ,QAAQC,IAAI,YAAcG,GAC1BY,EAAgBZ,EAEhBJ,QAAQC,IAAIe,EAAgB,YAC5B,IAAME,EAAgBD,EAAMI,QAAO,SAAAC,GACjC,OAAIN,IAAkBM,EAAK3B,MAClB2B,EAAK3B,QAAUqB,EAEA,SAAlBA,EAEKM,OAFT,KAOJH,EAAaD,IAIf,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACCA,EAAcK,KAAI,SAAAD,GAAI,OAAI,cAAC,EAAD,CAAYV,aAAcQ,EAAoCzB,MAAO2B,EAAK3B,MAAOC,MAAO0B,EAAK1B,MAAOC,UAAWyB,EAAKzB,WAA/DyB,EAAK/B,OACrF,cAAC,EAAD,QClCSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,YAQ1BiB,K","file":"static/js/main.4f81c8ff.chunk.js","sourcesContent":["// Displays Select Plan heading\n\nimport '../App.css';\n\nfunction SelectPlanTitle() {\n    return (\n        <div id=\"title\">\n            <h1>Select Plan:</h1>\n        </div>\n    )\n}\n\nexport default SelectPlanTitle;","// Displays several types of plans to select from, currently with placeholders\nimport React, { useState } from 'react';\nimport { getByTitle } from '@testing-library/dom';\nimport './SelectPlan.css';\n\nfunction SelectPlan(props) {\n    const [title, setTitle] = useState(props.title);\n    const [price, setPrice] = useState(props.price);\n    const [frequency, setFrequency] = useState(props.frequency);\n    const [change, toggleChange] = useState(\"Select\");\n    // var selectPlanToggle = true;\n    console.log(\"SelectPlan evaluated by react\");\n    // Event handler upon clicking Select for a plan option; grabs the title, price and\n    // frequency values of the plan to be used later.\n    function clickHandler() {\n        // setTitle(\"Plan Selected!\");\n        const selectedPlan = {\n            title: props.title,\n            price: props.price,\n            frequency: props.frequency,\n        };\n        console.log(\"Test\" + selectedPlan.price);\n        var summaryDisplay = document.getElementById(\"summary\");\n        var orderTitle = document.getElementById(\"title\");\n        var btnPay = document.getElementById(\"btnPay\");\n        var changeBtn = document.getElementById(\"change\");\n        var planDisplay = document.getElementById(\"plan\");\n        if (change === \"Select\") {\n            summaryDisplay.style.display = \"block\"\n            orderTitle.style.display = \"none\";\n            btnPay.style.display = \"inline-block\";\n            // selectPlanToggle = !selectPlanToggle;\n            toggleChange(\"Change\");\n            props.onChoosePlan(selectedPlan.title);\n            // if (props.title === selectedPlan.title) {\n            //     console.log(props.title + \"ok\");\n            //     planDisplay.style.display = \"flex\";\n            // } else {\n            //     console.log(props.title + \"Ok\");\n            //     planDisplay.style.display = \"none\";\n            // }\n\n        } else {\n            summaryDisplay.style.display = \"none\"\n            orderTitle.style.display = \"block\";\n            btnPay.style.display = \"none\";\n            // selectPlanToggle = !selectPlanToggle;\n            toggleChange(\"Select\");\n            props.onChoosePlan(\"none\");\n        }\n        // return selectedPlan;\n\n        {/*return (\n            <div>\n                {selectedPlan.map(plan => <SelectPlan title={plan.title} price={plan.price} frequency={plan.frequency} />)}\n            </div>\n        )*/}\n        console.log(selectedPlan.title + \" $\" + selectedPlan.price + selectedPlan.frequency);\n        // console.log(selectedPlan.title);\n        // console.log(selectedPlan.price);\n        // console.log(selectedPlan.frequency);\n        // console.log(title, price + frequency);\n    }\n\n    return (\n        <div>\n            <div className=\"plan\" id=\"plan\">\n                {/*<img src=\"%PUBLIC_URL%/icon-music.svg\" alt=\"music>\"> </img>*/}\n                <div className=\"details\">\n                    <h2>{title}</h2>\n                    <p className=\"price\">${props.price}{props.frequency}</p>\n                </div>\n                <a className=\"change\" id=\"change\" onClick={clickHandler}>{change}</a>\n            </div>\n        </div>\n    )\n}\n\nexport default SelectPlan;","// Button for confirming your plan selection\nimport './Button1.css';\n\nfunction Button1() {\n    return (\n        <p><button className=\"button1\" id=\"btnPay\">Proceed to Payment</button></p>\n    )\n}\n\nexport default Button1;","// Displays order summary header + text \n\nimport '../App.css';\n\nfunction OrderSummary() {\n    return (\n        <div id=\"summary\">\n            <h1>Order Summary</h1>\n\n            <p className=\"text\">You can now listen to millions of songs, audiobooks, and podcasts on any\n                device anywhere you like!</p>\n        </div>\n    )\n}\n\nexport default OrderSummary;","/*import logo from './logo.svg';*/\nimport React, { useState } from 'react';\nimport './App.css';\nimport './index.css';\nimport SelectPlanTitle from './components/SelectPlanTitle';\nimport SelectPlan from './components/SelectPlan';\nimport Button1 from './components/Button1';\nimport PlanContainer from './components/PlanContainer';\nimport OrderSummary from './components/OrderSummary';\n\nfunction App(props) {\n  const plans = [\n    { id: 1, title: 'Monthly Plan', price: 5.99, frequency: '/month' },\n    { id: 2, title: 'Annual Plan', price: 59.99, frequency: '/year' },\n    { id: 3, title: 'One-Time Payment', price: 159.99, frequency: '' },\n  ];\n\n  // Filter functions to display only the selected plans, or all plans if none selected\n  const [filteredPlans, onUpdatePlan] = useState(plans);\n\n  let selectedPlan2;\n  const addSelectPlanHandler = selectedPlan => {\n    console.log(\"in app.js\" + selectedPlan);\n    selectedPlan2 = selectedPlan;\n\n    console.log(selectedPlan2 + \"callPlan\");\n    const filteredPlans = plans.filter(plan => {\n      if (selectedPlan2 === plan.title) {\n        return plan.title === selectedPlan2;\n      } else {\n        if (selectedPlan2 === \"none\") {\n          // Runs through each plan and displays them if none selected\n          return plan;\n        }\n      }\n    });\n    // Update the filteredPlans mapping to show changes made\n    onUpdatePlan(filteredPlans);\n  }\n\n\n  return (\n    <div>\n      <SelectPlanTitle />\n      <OrderSummary />\n      {filteredPlans.map(plan => <SelectPlan onChoosePlan={addSelectPlanHandler} key={plan.id} title={plan.title} price={plan.price} frequency={plan.frequency} />)}\n      <Button1 />\n    </div>\n  )\n}\n\nexport default App;\nexport { SelectPlan };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('details')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}