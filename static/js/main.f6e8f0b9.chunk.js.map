{"version":3,"sources":["components/SelectPlanTitle.js","components/SelectPlan.js","components/Button1.js","components/OrderSummary.js","components/ConfirmPayment.js","components/PaymentForm.js","components/PaymentConfirmed.js","App.js","reportWebVitals.js","index.js"],"names":["SelectPlanTitle","id","SelectPlan","props","useState","title","price","frequency","change","toggleChange","console","log","className","onClick","selectedPlan","summaryDisplay","document","getElementById","orderTitle","btnPay","style","display","onChoosePlan","Button1","onProceed","OrderSummary","ConfirmPayment","PaymentForm","action","for","type","maxlength","SubmitEvent","preventDefault","onSubmit","PaymentConfirmed","App","selectedPlan2","plans","filteredPlans","onUpdatePlan","addSelectPlanHandler","filter","plan","loadingSpinner","visibility","confirmPay","opacity","submitPlan","loadingDisplay","cancelBtn","window","setTimeout","map","proceedPlan","planDisplay","planSummary","formDisplay","proceedBtn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f6e8f0b9.chunk.js","sourcesContent":["// Displays Select Plan heading\n\nimport '../App.css';\n\nfunction SelectPlanTitle() {\n    return (\n        <div id=\"title\">\n            <h1>Select Plan:</h1>\n        </div>\n    )\n}\n\nexport default SelectPlanTitle;","// Displays several types of plans to select from, currently with placeholders\nimport React, { useState } from 'react';\nimport { getByTitle } from '@testing-library/dom';\nimport './SelectPlan.css';\n\nfunction SelectPlan(props) {\n    const [title, setTitle] = useState(props.title);\n    const [price, setPrice] = useState(props.price);\n    const [frequency, setFrequency] = useState(props.frequency);\n    const [change, toggleChange] = useState(\"Select\");\n    console.log(\"SelectPlan evaluated by react\");\n    // Event handler upon clicking Select for a plan option; grabs the title, price and\n    // frequency values of the plan to be used later.\n    function clickHandler() {\n        const selectedPlan = {\n            title: props.title,\n            price: props.price,\n            frequency: props.frequency,\n        };\n        console.log(\"Test\" + selectedPlan.price);\n        var summaryDisplay = document.getElementById(\"summary\");\n        var orderTitle = document.getElementById(\"title\");\n        var btnPay = document.getElementById(\"btnPay\");\n        var changeBtn = document.getElementById(\"change\");\n        var planDisplay = document.getElementById(\"plan\");\n        if (change === \"Select\") {\n            summaryDisplay.style.display = \"block\"\n            orderTitle.style.display = \"none\";\n            btnPay.style.display = \"inline-block\";\n            toggleChange(\"Change\");\n            props.onChoosePlan(selectedPlan.title);\n            // if (props.title === selectedPlan.title) {\n            //     console.log(props.title + \"ok\");\n            //     planDisplay.style.display = \"flex\";\n            // } else {\n            //     console.log(props.title + \"Ok\");\n            //     planDisplay.style.display = \"none\";\n            // }\n\n        } else {\n            summaryDisplay.style.display = \"none\"\n            orderTitle.style.display = \"block\";\n            btnPay.style.display = \"none\";\n            toggleChange(\"Select\");\n            props.onChoosePlan(\"none\");\n        }\n        // return selectedPlan;\n\n        {/*return (\n            <div>\n                {selectedPlan.map(plan => <SelectPlan title={plan.title} price={plan.price} frequency={plan.frequency} />)}\n            </div>\n        )*/}\n        console.log(selectedPlan.title + \" $\" + selectedPlan.price + selectedPlan.frequency);\n    }\n\n    return (\n        <div id=\"planHolder\">\n            <div className=\"plan\" id=\"plan\">\n                {/*<img src=\"%PUBLIC_URL%/icon-music.svg\" alt=\"music>\"> </img>*/}\n                <div className=\"details\">\n                    <h2>{title}</h2>\n                    <p className=\"price\">${props.price}{props.frequency}</p>\n                </div>\n                <a className=\"change\" id=\"change\" onClick={clickHandler}>{change}</a>\n            </div>\n        </div>\n    )\n}\n\nexport default SelectPlan;","// Button for confirming your plan selection\nimport './Button1.css';\n\nfunction Button1(props) {\n    function clickHandler() {\n        props.onProceed(true);\n    }\n    return (\n        <p><button className=\"button1\" id=\"btnPay\" onClick={clickHandler}>Proceed to Payment</button></p>\n    )\n}\n\nexport default Button1;","// Displays order summary header + text \n\nimport '../App.css';\n\nfunction OrderSummary() {\n    return (\n        <div id=\"summary\">\n            <h1>Order Summary</h1>\n\n            <p className=\"text\">You can now listen to millions of songs, audiobooks, and podcasts on any\n                device anywhere you like!</p>\n        </div>\n    )\n}\n\nexport default OrderSummary;","// Displays window confirming that the purchase was successful after clicking confirm\n\nimport '../App.css';\nimport './ConfirmPayment.css';\n\nfunction ConfirmPayment() {\n    return (\n        <div>\n            <div className=\"loading\" id=\"loading\"></div>\n        </div>\n    )\n    return (\n        <div className=\"container\">\n            <p>Payment confirmed!</p>\n        </div>\n    )\n}\n\nexport default ConfirmPayment;","// Displays payment form upon confirming plan choice\n\nimport '../App.css';\nimport './PaymentForm.css';\nimport ConfirmPayment from './ConfirmPayment';\n\nfunction PaymentForm(props) {\n    const SubmitHandler = SubmitEvent => {\n        SubmitEvent.preventDefault();\n        props.onSubmit(true);\n    }\n\n    return (\n        <div id=\"form__pay\">\n            <form action=\"\">\n                <h1>Payment</h1>\n                <div>\n                    <label for=\"cardname\" id=\"cardname\">Name on card</label>\n                    <input type=\"text\" maxlength=\"32\"></input>\n                </div><div>\n                    <label for=\"cardnum\" id=\"cardnum\">Credit Card Number</label>\n                    <input type=\"tel\" maxlength=\"16\"></input>\n                </div><div>\n                    <label for=\"expyear\" id=\"expyear\">Expiration Year</label>\n                    <input type=\"tel\" maxlength=\"4\"></input>\n                </div><div>\n                    <label for=\"scode\" id=\"scode\">Security Code</label>\n                    <input type=\"tel\" maxlength=\"3\" id=\"securitycode\"></input>\n                </div>\n                <button type=\"submit\" id=\"payBtn\" onClick={SubmitHandler}>Submit Details</button>\n            </form>\n        </div>\n    )\n}\n\nexport default PaymentForm;","// Displays window confirming that the purchase was successful after clicking confirm\n\nimport '../App.css';\nimport './PaymentConfirmed.css';\n\nfunction PaymentConfirmed() {\n    return (\n        <div className=\"container\" id=\"confirmation\">\n            <p>Payment confirmed!</p>\n        </div>\n    )\n}\n\nexport default PaymentConfirmed;","/*import logo from './logo.svg';*/\nimport React, { useState } from 'react';\nimport './App.css';\nimport './index.css';\nimport SelectPlanTitle from './components/SelectPlanTitle';\nimport SelectPlan from './components/SelectPlan';\nimport Button1 from './components/Button1';\nimport PlanContainer from './components/PlanContainer';\nimport OrderSummary from './components/OrderSummary';\nimport PaymentForm from './components/PaymentForm';\nimport ConfirmPayment from './components/ConfirmPayment';\nimport PaymentConfirmed from './components/PaymentConfirmed';\n\nfunction App(props) {\n  const plans = [\n    { id: 1, title: 'Monthly Plan', price: 5.99, frequency: '/month' },\n    { id: 2, title: 'Annual Plan', price: 59.99, frequency: '/year' },\n    { id: 3, title: 'One-Time Payment', price: 159.99, frequency: '' },\n  ];\n\n  // Filter functions to display only the selected plans, or all plans if none selected\n  const [filteredPlans, onUpdatePlan] = useState(plans);\n\n  let selectedPlan2;\n  const addSelectPlanHandler = selectedPlan => {\n    console.log(\"in app.js\" + selectedPlan);\n    selectedPlan2 = selectedPlan;\n\n    console.log(selectedPlan2 + \"callPlan\");\n    const filteredPlans = plans.filter(plan => {\n      if (selectedPlan2 === plan.title) {\n        return plan.title === selectedPlan2;\n      } else {\n        if (selectedPlan2 === \"none\") {\n          // Runs through each plan and displays them if none selected\n          return plan;\n        }\n      }\n    });\n    // Update the filteredPlans mapping to show changes made\n    onUpdatePlan(filteredPlans);\n  }\n  const proceedPlanHandler = proceedPlan => {\n    console.log(proceedPlan);\n    var planDisplay = document.getElementById(\"planHolder\");\n    var planSummary = document.getElementById(\"summary\");\n    var formDisplay = document.getElementById(\"form__pay\");\n    var proceedBtn = document.getElementById(\"btnPay\");\n    planDisplay.style.display = \"none\";\n    planSummary.style.display = \"none\";\n    formDisplay.style.display = \"block\";\n    proceedBtn.style.display = \"none\";\n\n  }\n\n  const submitHandler = submitPlan => {\n    console.log(submitPlan);\n    var loadingDisplay = document.getElementById(\"loading\");\n    var cancelBtn = document.getElementById(\"cancelButton\");\n    loadingDisplay.style.display = \"block\";\n    cancelBtn.style.display = \"none\";\n    var formDisplay = document.getElementById(\"form__pay\");\n    formDisplay.style.display = \"none\";\n    var confirmPay = document.getElementById(\"confirmation\");\n    confirmPay.style.visibility = \"hidden\";\n    confirmPay.style.opacity = \"0\";\n    window.setTimeout(loadingSpinner, 4500);\n  }\n\n  function loadingSpinner() {\n    var loadingDisplay = document.getElementById(\"loading\");\n    loadingDisplay.style.visibility = \"hidden\";\n    var confirmPay = document.getElementById(\"confirmation\");\n    confirmPay.style.display = \"block\";\n    confirmPay.style.visibility = \"visible\";\n    confirmPay.style.opacity = \"1\";\n  }\n\n\n  return (\n    <div>\n      <PaymentConfirmed />\n      <ConfirmPayment />\n      <PaymentForm onSubmit={submitHandler} />\n      <SelectPlanTitle />\n      <OrderSummary />\n      {filteredPlans.map(plan => <SelectPlan onChoosePlan={addSelectPlanHandler} key={plan.id} title={plan.title} price={plan.price} frequency={plan.frequency} />)}\n      <Button1 onProceed={proceedPlanHandler} />\n    </div>\n  )\n}\n\nexport default App;\nexport { SelectPlan };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('details')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}